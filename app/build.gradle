apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.neenbedankt.android-apt'//添加apt命令
apply plugin: 'AndResGuard'

andResGuard {
// mappingFile = file("./resource_mapping.txt")
    mappingFile = null
    use7zip = true
    useSign = true
    // 打开这个开关，会keep住所有资源的原始路径，只混淆资源的名字
    keepRoot = false
    whiteList = [
            // for your icon
            "R.drawable.icon"
    ]
    compressFilePattern = [
            "*.png",
            "*.jpg",
            "*.jpeg",
            "*.gif",
            "resources.arsc"
    ]
    sevenzip {
        artifact = 'com.tencent.mm:SevenZip:1.2.12'
        //path = "/usr/local/bin/7za"
    }

    /**
     * 可选： 如果不设置则会默认覆盖assemble输出的apk
     **/
    // finalApkBackupPath = "${project.rootDir}/final.apk"

    /**
     * 可选: 指定v1签名时生成jar文件的摘要算法
     * 默认值为“SHA-1”
     **/
    // digestalg = "SHA-256"
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    defaultConfig {
        applicationId "com.ybj.phonehelp"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["support-v4"]
    //butterknife
    compile rootProject.ext.dependencies["butterknife"]
    compile rootProject.ext.dependencies["butterknife-compiler"]

    //Retrofit
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava2"]

    //OkHttp
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["logging-interceptor"]
    //Picasso
    compile rootProject.ext.dependencies["picasso"]
    //RxJava2和RxAndroid
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]

    //Dagger2
    apt rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["dagger"]
    provided rootProject.ext.dependencies["annotation"]

    //Icons
    compile rootProject.ext.dependencies["android-pathview"]
    compile rootProject.ext.dependencies["iconics-core"]
    compile rootProject.ext.dependencies["iconics-views"]
    compile rootProject.ext.dependencies["google-material-typeface"]

    //Fragmentation
    compile rootProject.ext.dependencies["fragmentation"]

    //avi
    compile rootProject.ext.dependencies["AvLoadingView"]

    //RxPermission
    compile rootProject.ext.dependencies["RxPermission"]

    //Glide
    compile rootProject.ext.dependencies["Glide"]
    compile rootProject.ext.dependencies["Okhttp3Integration"]
    compile rootProject.ext.dependencies["GlideTransformations"]

    //BaseRecyclerView
    compile rootProject.ext.dependencies["BaseRecyclerView"]

    //RxBinding
    compile rootProject.ext.dependencies["RxBinding"]

    //RxBus
    compile rootProject.ext.dependencies["RxBus"]

    //multidex
    compile rootProject.ext.dependencies["Multidex"]

    compile rootProject.ext.dependencies["ExpandableTextView"]

    //behavior
    compile rootProject.ext.dependencies["Behavior"]

    //EventBus
    compile rootProject.ext.dependencies["eventbus"]

    testCompile 'junit:junit:4.12'
}
